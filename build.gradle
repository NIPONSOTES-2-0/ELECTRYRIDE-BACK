plugins {
	id 'org.springframework.boot' version '2.4.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "org.sonarqube" version "3.1.1"
	id 'application'
    id 'jacoco'
}

group = 'edu.escuelaing.eci.ieti'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	testImplementation group: 'org.mockito', name: 'mockito-core', version: '2.1.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation group: 'org.junit.vintage', name: 'junit-vintage-engine', version: '5.6.2'
	testImplementation 'io.projectreactor:reactor-test'
	testCompile 'junit:junit:4.12'
	
}
sonarqube {
  properties {
    property "sonar.projectKey", "NIPONSOTES-2-0_ELECTRYRIDE-BACK"
    property "sonar.organization", "niponsotes-2-0"
    property "sonar.host.url", "https://sonarcloud.io"
	  property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/reports/test/jacocoTestReport.xml"
	  property 'sonar.junit.reportsPath', "${buildDir}/test-results"
	  property 'sonar.binaries', "${buildDir}/classes/main/"
	  property "sonar.java.coveragePlugin", "jacoco"
	  property "sonar.tests", "src/test"
	  property "sonar.java.test.binaries", "build/classes/java/test"
    property 'sonar.coverage.exclusions', jacocoExclusions
     
  }
}
ext {
    jacocoExclusions = ['**/*edu/escuelaing/eci/ieti/ElectryrideBack2Application.java','**/*edu/escuelaing/eci/ieti/models/**']
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
	useJUnitPlatform()
}
jacoco {
	reportsDir = file("${project.projectDir}/build/reports")
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
	reports {
		html.enabled = true
		xml.enabled = true
	}
	afterEvaluate {
		getClassDirectories().setFrom(classDirectories.files.collect {
			fileTree(dir: it, exclude: ['**/*edu/escuelaing/eci/ieti/ElectryrideBack2Application.java',
										'**/*edu/escuelaing/eci/ieti/models/**'])
		})
	}
}